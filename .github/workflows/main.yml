name: Release

on:
  push:
    tags:
      - "v*"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Install Dependency
        run: sudo apt install wine64

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: "14.x"
      - run: yarn

      - name: Build All Platforms
        id: build_all_platforms
        run: yarn make

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          release_name: ilbecon-ports ${{ github.ref }}
          tag_name: ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Ubuntu Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./out/make/deb/x64/${{ steps.build_all_platforms.outputs.ubuntu }}
          asset_name: ${{ steps.build_all_platforms.outputs.ubuntu }}
          asset_content_type: application/deb

      - name: Upload Fedora Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./out/make/rpm/x64/${{ steps.build_all_platforms.outputs.fedora }}
          asset_name: ${{ steps.build_all_platforms.outputs.fedora }}
          asset_content_type: application/rpm

      - name: Upload Windows Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./out/make/zip/win32/x64/${{ steps.build_all_platforms.outputs.win32 }}
          asset_name: ${{ steps.build_all_platforms.outputs.win32 }}
          asset_content_type: application/zip

      - name: Upload MacOS Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./out/make/zip/darwin/x64/${{ steps.build_all_platforms.outputs.macos }}
          asset_name: ${{ steps.build_all_platforms.outputs.macos }}
          asset_content_type: application/zip
